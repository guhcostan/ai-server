%YAML 1.1
---
name: "Continue + AI Models Complete (Vertex AI Gateway)"
version: "2.0.0"

# Multi-provider configuration via Vertex AI Model Garden
models:
  # === GOOGLE MODELS (via Vertex AI - Nativo) ===
  
  # Google Gemini 2.5 Models (Latest)
  - name: "Gemini 2.5 Flash ‚ö°"
    provider: "openai"
    model: "gemini-2.5-flash"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Gemini 2.5 Pro üöÄ"
    provider: "openai"
    model: "gemini-2.5-pro"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"

  # Google Gemini 2.0 Models (Current)
  - name: "Gemini 2.0 Flash ‚ö°"
    provider: "openai"
    model: "gemini-2.0-flash"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Gemini 2.0 Pro üöÄ"
    provider: "openai"
    model: "gemini-2.0-pro"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"

  # Google Gemini 1.5 Models (Stable - Funcionando)
  - name: "Gemini 1.5 Flash ‚ö°"
    provider: "openai"
    model: "gemini-1.5-flash"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Gemini 1.5 Pro üß†"
    provider: "openai"
    model: "gemini-1.5-pro"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"

  # Google Legacy/Specialized Models
  - name: "Gemini Pro (Legacy) üìö"
    provider: "openai"
    model: "gemini-pro"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Code Bison üíª"
    provider: "openai"
    model: "code-bison"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Text Bison üìù"
    provider: "openai"
    model: "text-bison"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"

  # === ANTHROPIC MODELS (via Vertex AI Model Garden) ===
  
  - name: "Claude 3.5 Sonnet üé≠"
    provider: "openai"
    model: "claude-3-5-sonnet-20241022"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Claude 3.5 Haiku üé≠"
    provider: "openai"
    model: "claude-3-5-haiku-20241022"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Claude 3 Opus üé≠"
    provider: "openai"
    model: "claude-3-opus-20240229"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Claude 3 Sonnet üé≠"
    provider: "openai"
    model: "claude-3-sonnet-20240229"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Claude 3 Haiku üé≠"
    provider: "openai"
    model: "claude-3-haiku-20240307"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"

  # === META MODELS (via Vertex AI Model Garden) ===
  
  - name: "Llama 3.1 405B ü¶ô"
    provider: "openai"
    model: "llama-3.1-405b-instruct"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Llama 3.1 70B ü¶ô"
    provider: "openai"
    model: "llama-3.1-70b-instruct"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Llama 3.1 8B ü¶ô"
    provider: "openai"
    model: "llama-3.1-8b-instruct"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Llama 2 70B Chat ü¶ô"
    provider: "openai"
    model: "llama-2-70b-chat"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Llama 2 13B Chat ü¶ô"
    provider: "openai"
    model: "llama-2-13b-chat"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Llama 2 7B Chat ü¶ô"
    provider: "openai"
    model: "llama-2-7b-chat"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"

  # === MISTRAL MODELS (via Vertex AI Model Garden) ===
  
  - name: "Mistral Large üåü"
    provider: "openai"
    model: "mistral-large"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Mistral Medium üåü"
    provider: "openai"
    model: "mistral-medium"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Mistral Small üåü"
    provider: "openai"
    model: "mistral-small"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Mixtral 8x7B üåü"
    provider: "openai"
    model: "mixtral-8x7b-instruct"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"

  # === COHERE MODELS (via Vertex AI Model Garden) ===
  
  - name: "Command R+ üíº"
    provider: "openai"
    model: "command-r-plus"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"
    
  - name: "Command R üíº"
    provider: "openai"
    model: "command-r"
    apiKey: "sk-vertex-ai"
    apiBase: "http://localhost:3000/v1"

# Context Providers
contextProviders:
  - name: "code"
  - name: "diff"
  - name: "open"
  - name: "folder"
  - name: "terminal"
  - name: "problems"
  - name: "git"

# Custom Rules
rules:
  - "Always include explanatory comments in complex code"
  - "Use descriptive variable names in English"
  - "Prefer simple and readable solutions"
  - "Include error handling when appropriate"
  - "Suggest performance improvements when relevant"
  - "Maintain consistency with existing project style"
  - "Follow security best practices"
  - "Write testable code"
  - "Use Vertex AI as unified gateway for all AI models"

# Custom Commands
customCommands:
  - name: "explain"
    prompt: "Explain the selected code in detail, including: 1) What it does, 2) How it works, 3) Possible improvements"
    description: "Detailed code explanation"
    
  - name: "optimize"
    prompt: "Analyze the selected code and suggest optimizations for performance, readability, and maintainability"
    description: "Optimization suggestions"
    
  - name: "test"
    prompt: "Create comprehensive unit tests for the selected code, including edge cases and error scenarios"
    description: "Test generation"
    
  - name: "document"
    prompt: "Create complete documentation for the selected code, including JSDoc/docstrings, README if necessary"
    description: "Automatic documentation"
    
  - name: "refactor"
    prompt: "Refactor the selected code following best practices: clean code, SOLID principles, appropriate design patterns"
    description: "Intelligent refactoring"
    
  - name: "debug"
    prompt: "Analyze the code to identify possible bugs, logic issues, or robustness improvements"
    description: "Bug analysis"
    
  - name: "security"
    prompt: "Review the selected code for security vulnerabilities and suggest improvements"
    description: "Security review"
    
  - name: "translate"
    prompt: "Translate the selected code to another programming language while maintaining functionality"
    description: "Code translation"

# Custom System Message
systemMessage: |
  You are a specialized programming assistant using Vertex AI as a unified gateway for multiple AI models:
  
  **Available Models via Vertex AI:**
  - Google: Gemini 2.5/2.0/1.5 series, Code/Text Bison
  - Anthropic: Claude 3.5/3 series (via Model Garden)
  - Meta: Llama 3.1/2 series (via Model Garden)
  - Mistral: Large/Medium/Small, Mixtral (via Model Garden)
  - Cohere: Command R+/R (via Model Garden)
  
  **Focus Areas:**
  1. **Clean Code**: Write readable, well-structured, and documented code
  2. **Best Practices**: Follow industry standards and SOLID principles
  3. **Security**: Always consider security aspects in code
  4. **Performance**: Optimize when necessary, but prioritize readability
  5. **Maintainability**: Code should be easy to maintain and extend
  6. **Testing**: Suggest and write comprehensive tests
  7. **Documentation**: Provide clear documentation and comments
  
  Always explain your decisions and suggest alternatives when appropriate.
  When working in agent mode, break down complex tasks into manageable steps.

# Slash Commands for Agent Mode
slashCommands:
  - name: "analyze"
    description: "Analyze the current codebase structure"
    
  - name: "implement"
    description: "Implement a feature based on description"
    
  - name: "fix"
    description: "Fix bugs or issues in the code"
    
  - name: "optimize"
    description: "Optimize code performance"
    
  - name: "deploy"
    description: "Help with deployment tasks"
    
  - name: "setup"
    description: "Set up project dependencies and configuration"
    
  - name: "vertex"
    description: "Help with Vertex AI Model Garden setup and configuration" 